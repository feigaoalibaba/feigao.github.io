---
layout: post
title: RSA算法
tags:
- 非对称加密算法 RSA
---


# 简介

   RSA公钥加密算法是1977年由罗纳德&middot;李维斯特（Ron Rivest）、阿迪&middot;萨莫尔（Adi Shamir）和伦纳德&middot;阿德曼（Leonard Adleman）一起提出的。当时他们三人都在麻省理工学院工作。RSA就是他们三人姓氏开头字母拼在一起组成的。
   RSA是目前最有影响力的公钥加密算法，它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密算法。
   RSA算法是一种非对称密码算法，所谓非对称，就是指该算法需要一对密钥，使用其中一个加密，则需要用另一个才能解密。

# RSA算法原理

   RSA算法是第一个能同时用于加密和数字签名的算法，也易于理解和操作。RSA是被研究得最广泛的公钥算法，从提出到现今的三十多年里，经历了各种攻击的考验，逐渐为人们接受，普遍认为是目前最优秀的公钥方案之一。
   
   RSA的算法涉及三个参数，
        
     n、e1、e2。其中，n是两个大质数p、q的积，n的二进制表示时所占用的位数，就是所谓的密钥长度。e1和e2是一对相关的值，e1可以任意取，
   
    要求e1与(p-1）*(q-1）互质；
   
    再选择e2，要求（e2*e1）mod((p-1）*(q-1））=1。
   
    （n，e1）,(n，e2）就是密钥对。其中(n，e1）为公钥，(n，e2）为私钥。
   
    RSA加解密的算法完全相同，设A为明文，B为密文，则：
   
    A=B^e2 mod n；
   
    B=A^e1 mod n；
   
    公钥加密体制中，一般用公钥加密，私钥解密
   
    e1和e2可以互换使用，即：
   
       A=B^e1 mod n；
   
       B=A^e2 mod n;
 
# RSA加解密过程图解
   ![image](/assets/2018-03-17-RSA/RSA加解密流程.png)

# RSA签名过程图解

# RSA应用

# RSA JAVA版实例

```java
第三方
```



# 联系方式





